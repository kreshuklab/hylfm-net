toolbox:
  nshrink: &nshrink -8

model:
  name: A04
  kwargs:
    scale: 4
    shrink: &shrink 8
    input_name: lfc
    prediction_name: pred
    nnum: &nnum 19
    z_out:  51
    n_res2d: [488, 488, u, 244, 244]
  precision: &precision float
  checkpoint: "/g/kreshuk/LF_computed/lnet/logs/beads/z_out51/4mu_f4/20-04-28_10-23-55/train/checkpoints/v1_checkpoint_SmoothL1Loss=-5.5897066583080836e-05.pth"

stages:
  - test_small_1:
      metrics: beads.yml
      log:
        TqdmLogger: {}
        FileLogger:
          scalars_every: {value: 1, unit: iteration}
      batch_preprocessing: []
      batch_preprocessing_in_step:
        - Cast: {apply_to: [lfc, ls_reg], dtype: *precision, device: cuda, non_blocking: true}
      batch_postprocessing: []
      data:
        - batch_size: 1
          sample_preprocessing:
            - Crop: {apply_to: ls_reg, crop: [[0, null], [35, -35], [*shrink, *nshrink], [*shrink, *nshrink]]}
            - Normalize01: {apply_to: lf, min_percentile: 5.0, max_percentile: 99.8}
            - Normalize01: {apply_to: ls_reg, min_percentile: 5.0, max_percentile: 99.99}
            - ChannelFromLightField: {apply_to: {lf: lfc}, nnum: *nnum}

          datasets:
            - tensors: {lf: beads.small_1, ls_reg: beads.small_1}
              sample_transformations:
                - Resize: {apply_to: ls_reg, shape: [1.0, 121, 0.21052631578947368421052631578947, 0.21052631578947368421052631578947, ], order: 2}  # 0.42105263157894736842105263157895‬=8/19; 0.21052631578947368421052631578947=4/19
                - Assert: {apply_to: ls_reg, expected_tensor_shape: [1, 121, null, null]}


  - test_medium:
      metrics: beads.yml
      log:
        TqdmLogger: {}
        FileLogger:
          scalars_every: {value: 1, unit: iteration}

      batch_preprocessing: []
      batch_preprocessing_in_step:
        - Cast: {apply_to: [lfc, ls_reg], dtype: *precision, device: cuda, non_blocking: true}
      batch_postprocessing: []
      data:
        - batch_size: 1
          sample_preprocessing:
            - Crop: {apply_to: ls_reg, crop: [[0, null], [35, -35], [*shrink, *nshrink], [*shrink, *nshrink]]}
            - Normalize01: {apply_to: lf, min_percentile: 5.0, max_percentile: 99.8}
            - Normalize01: {apply_to: ls_reg, min_percentile: 5.0, max_percentile: 99.99}
            - ChannelFromLightField: {apply_to: {lf: lfc}, nnum: *nnum}

          datasets:
            - tensors: {lf: local.beads.b4mu_3, ls_reg: local.beads.b4mu_3}
              indices: 0-35
              sample_transformations:
                - Resize: {apply_to: ls_reg, shape: [1.0, 121, 0.21052631578947368421052631578947, 0.21052631578947368421052631578947, ], order: 2}  # 0.42105263157894736842105263157895‬=8/19; 0.21052631578947368421052631578947=4/19
                - Assert: {apply_to: ls_reg, expected_tensor_shape: [1, 121, null, null]}

  - validation_scores_medium:
      metrics: beads.yml
      log:
        TqdmLogger: {}
        FileLogger:
          scalars_every: {value: 1, unit: iteration}

      batch_preprocessing: []
      batch_preprocessing_in_step:
        - Cast: {apply_to: [lfc, ls_reg], dtype: *precision, device: cuda, non_blocking: true}
      batch_postprocessing: []
      data:
        - batch_size: 1
          sample_preprocessing:
            - Crop: {apply_to: ls_reg, crop: [[0, null], [35, -35], [*shrink, *nshrink], [*shrink, *nshrink]]}
            - Normalize01: {apply_to: lf, min_percentile: 5.0, max_percentile: 99.8}
            - Normalize01: {apply_to: ls_reg, min_percentile: 5.0, max_percentile: 99.99}
            - ChannelFromLightField: {apply_to: {lf: lfc}, nnum: *nnum}

          datasets:
            - tensors: {lf: local.beads.b4mu_3, ls_reg: local.beads.b4mu_3}
              indices: 35-40
              sample_transformations:
                - Resize: {apply_to: ls_reg, shape: [1.0, 121, 0.21052631578947368421052631578947, 0.21052631578947368421052631578947, ], order: 2}  # 0.42105263157894736842105263157895‬=8/19; 0.21052631578947368421052631578947=4/19
                - Assert: {apply_to: ls_reg, expected_tensor_shape: [1, 121, null, null]}

  - train_scores_medium:
      metrics: beads.yml
      log:
        TqdmLogger: {}
        FileLogger:
          scalars_every: {value: 1, unit: iteration}

      batch_preprocessing: []
      batch_preprocessing_in_step:
        - Cast: {apply_to: [lfc, ls_reg], dtype: *precision, device: cuda, non_blocking: true}
      batch_postprocessing: []
      data:
        - batch_size: 1
          sample_preprocessing:
            - Crop: {apply_to: ls_reg, crop: [[0, null], [35, -35], [*shrink, *nshrink], [*shrink, *nshrink]]}
            - Normalize01: {apply_to: lf, min_percentile: 5.0, max_percentile: 99.8}
            - Normalize01: {apply_to: ls_reg, min_percentile: 5.0, max_percentile: 99.99}
            - ChannelFromLightField: {apply_to: {lf: lfc}, nnum: *nnum}

          datasets:
#            - tensors: {lf: local.beads.b4mu_0, ls_reg: local.beads.b4mu_0}
#              sample_transformations:
#                - Resize: {apply_to: ls_reg, shape: [1.0, 121, 0.21052631578947368421052631578947, 0.21052631578947368421052631578947, ], order: 2}  # 0.42105263157894736842105263157895‬=8/19; 0.21052631578947368421052631578947=4/19
#                - Assert: {apply_to: ls_reg, expected_tensor_shape: [1, 121, null, null]}
#            - tensors: {lf: local.beads.b4mu_1, ls_reg: local.beads.b4mu_1}
#              sample_transformations:
#                - Resize: {apply_to: ls_reg, shape: [1.0, 121, 0.21052631578947368421052631578947, 0.21052631578947368421052631578947, ], order: 2}  # 0.42105263157894736842105263157895‬=8/19; 0.21052631578947368421052631578947=4/19
#                - Assert: {apply_to: ls_reg, expected_tensor_shape: [1, 121, null, null]}
            - tensors: {lf: local.beads.b4mu_2, ls_reg: local.beads.b4mu_2}
              sample_transformations:
                - Resize: {apply_to: ls_reg, shape: [1.0, 121, 0.21052631578947368421052631578947, 0.21052631578947368421052631578947, ], order: 2}  # 0.42105263157894736842105263157895‬=8/19; 0.21052631578947368421052631578947=4/19
                - Assert: {apply_to: ls_reg, expected_tensor_shape: [1, 121, null, null]}
