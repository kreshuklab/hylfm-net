
toolbox: # defines yaml placeholders
  precision: &precision float
  nnum: &nnum 19
  z_out: &z_out 49
  meta: &meta {nnum: *nnum, z_out: *z_out, scale: &scale 4, shrink: &shrink 8, interpolation_order: 2, z_ls_rescaled: 241, pred_z_min: 0, pred_z_max: 838, crop_names: &crop_names [Heart_tightCrop]}  # z_min full: 0, z_max full: 838; 60/209*838=241; 838-10/209*838=798
  eval_batch_size: &eval_batch_size 1
  sample_trfs: &sample_trfs []
  eval_sample_prepr_dynamic: &eval_sample_prepr_dynamic
    - CropWhatShrinkDoesNot: {apply_to: lf, meta: *meta, wrt_ref: true}
    - CropLSforDynamicTraining: {apply_to: ls_slice, meta: *meta}
    - Normalize01: {apply_to: lf, min_percentile: 5.0, max_percentile: 99.8}
    - Normalize01: {apply_to: ls_slice, min_percentile: 5.0, max_percentile: 99.99}
    - ChannelFromLightField: {apply_to: {lf: lfc}, nnum: *nnum}
  train_sample_prepr_dynamic: &train_sample_prepr_dynamic
    - CropWhatShrinkDoesNot: {apply_to: lf, meta: *meta, wrt_ref: true}
    - CropLSforDynamicTraining: {apply_to: ls_slice, meta: *meta}
    - Normalize01: {apply_to: lf, min_percentile: 5.0, max_percentile: 99.8}
    - Normalize01: {apply_to: ls_slice, min_percentile: 5.0, max_percentile: 99.99}
    - AdditiveGaussianNoise: {apply_to: lf, sigma: 0.1}
    - AdditiveGaussianNoise: {apply_to: ls_slice, sigma: 0.05}
    - RandomIntensityScale: {apply_to: [lf, ls_slice], factor_min: .8, factor_max: 1.2}
    - RandomlyFlipAxis: {apply_to: [lf, ls_slice], axis: -1}
    - RandomlyFlipAxis: {apply_to: [lf, ls_slice], axis: -2}
  eval_batch_prepr: &eval_batch_prepr []
  train_batch_prepr: &train_batch_prepr
    - RandomRotate90: {apply_to: [lf, ls_slice]}
    - ChannelFromLightField: {apply_to: {lf: lfc}, nnum: *nnum}
  batch_prepr_in_step_dynamic: &batch_prepr_in_step_dynamic
    - Cast: {apply_to: [lfc, ls_slice], dtype: *precision, device: cuda, non_blocking: true}
  batch_postpr_dynamic: &batch_postpr_dynamic
    - Cast: {apply_to: lfc, dtype: *precision, device: cpu, non_blocking: true}
    - Assert: {apply_to: pred, expected_tensor_shape: [1, *z_out, null, null]}
    - AffineTransformationDynamicTraining: {apply_to: pred, target_to_compare_to: ls_slice, meta: *meta}

  train_filter_dynamic: &train_filter_dynamic [[z_range, {z_min: 29, z_max: 218}], [signal2noise, {apply_to: ls_slice, signal_percentile: 99.9, noise_percentile: 5.0, ratio: 1.3}]]
  eval_filter_dynamic: &eval_filter_dynamic [[z_range, {z_min: 29, z_max: 218}]]  # 19 + 60, 241-13-10

model:
  name: A04
  kwargs:
    scale: *scale
    shrink: *shrink
    input_name: lfc
    prediction_name: pred
    nnum: *nnum
    z_out: *z_out
    n_res2d: [488, 488, u, 244, 244]

  z_out_slice_from_larger_weight: [15, 64]
  checkpoint: "/g/kreshuk/beuttenm/pycharm_tmp/repos/hylfm-net/logs/train/heart/z_out79/dualview_single_lfm_static_f4/20-11-06_16-45-29/train/run000/checkpoints/v1_checkpoint_80_smooth_l1_loss-scaled=-4.366243229014799e-06.pth"

stages:
  - test_dynamic_00: &test_dynamic
      metrics: heart_dynamic.yml
      log:
        TqdmLogger: {}
        FileLogger:
          scalars_every: {value: 1, unit: iteration}
          tensors_every: {value: 1, unit: iteration}
          tensor_names: {ls_slice, pred}
      batch_preprocessing: *eval_batch_prepr
      batch_preprocessing_in_step: *batch_prepr_in_step_dynamic
      batch_postprocessing: *batch_postpr_dynamic
      data:
        - batch_size: *eval_batch_size
          sample_transformations: *sample_trfs
          sample_preprocessing: *eval_sample_prepr_dynamic
          filters: *eval_filter_dynamic
          datasets:
            - {tensors: {lf: heart_dynamic.2019-12-09_04.54.38, ls_slice: heart_dynamic.2019-12-09_04.54.38, meta: *meta}, indices: 0-964}  # (0-4)*241

  - train_01:
      max_epochs: 20
      metrics: []
      log: &train_log
        save_n_checkpoints: 1
        TqdmLogger: {}
        TensorBoardLogger:
          scalars_every: {value: 1, unit: iteration}
#          tensors_every: {value: 1, unit: iteration}
#          tensor_names: [lf, pred, ls_slice]
      criterion: &criterion
        name: SmoothL1Loss
        kwargs: {}
        tensor_names: {prediction: pred, target: ls_slice}

      optimizer: &optimizer
        name: Adam
        kwargs: {lr: 3.0e-4, eps: 1.0e-8}

      sampler: &sampler
        base: RandomSampler
        drop_last: true

      batch_preprocessing: *train_batch_prepr
      batch_preprocessing_in_step: *batch_prepr_in_step_dynamic
      batch_postprocessing: *batch_postpr_dynamic
      data:
        - batch_size: &train_batch_size 5
          sample_transformations: *sample_trfs
          sample_preprocessing: *train_sample_prepr_dynamic
          filters: *train_filter_dynamic
          datasets:
            - {tensors: {lf: heart_dynamic.2019-12-09_04.54.38, ls_slice: heart_dynamic.2019-12-09_04.54.38, meta: *meta}, indices: 964-12291}

      validate:
        metrics: heart_dynamic_light.yml
        log:
          TqdmLogger: {}
          TensorBoardLogger:
            scalars_every: {value: 1, unit: epoch}
            tensors_every: {value: 8, unit: iteration}
          FileLogger:
            scalars_every: {value: 1, unit: epoch}
            tensors_every: {value: 1, unit: iteration}
            tensor_names: {pred}
        score_metric: ms_ssim-scaled
        period: {value: 25, unit: iteration}
        patience: 30
        batch_preprocessing: *eval_batch_prepr
        batch_preprocessing_in_step: *batch_prepr_in_step_dynamic
        batch_postprocessing: *batch_postpr_dynamic
        data:
          - batch_size: *eval_batch_size
            sample_transformations: *sample_trfs
            sample_preprocessing: *eval_sample_prepr_dynamic
            filters: *eval_filter_dynamic
            datasets:
              - {tensors: {lf: heart_dynamic.2019-12-09_04.54.38, ls_slice: heart_dynamic.2019-12-09_04.54.38, meta: *meta}, indices: 0-964}
